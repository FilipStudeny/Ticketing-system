@page "/register"
@using TicketingSystem.Data
@using TicketingSystem.Models

<h3>Register</h3>

<EditForm Model="@technician" OnValidSubmit="RegisterTechnician">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="technician.email" class="form-control" />
    </div>

    <div class="form-group">
        <label for="firstname">First Name</label>
        <InputText id="firstname" @bind-Value="technician.firstname" class="form-control" />
    </div>

    <div class="form-group">
        <label for="lastname">Last Name</label>
        <InputText id="lastname" @bind-Value="technician.lastname" class="form-control" />
    </div>

    <div class="form-group">
        <label for="department">Department</label>
        <InputText id="department" @bind-Value="technician.department" class="form-control" />
    </div>

    <!-- Add a password input field -->
    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="technician.password" type="password" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

<div>
    @if (registeredTechnician != null)
    {
        <h4>Registered Technician:</h4>
        <p>ID: @registeredTechnician.ID</p>
        <p>Email: @registeredTechnician.email</p>
        <p>First Name: @registeredTechnician.firstname</p>
        <p>Last Name: @registeredTechnician.lastname</p>
        <p>Department: @registeredTechnician.department</p>
    }
</div>

@code {
    private Technician technician = new Technician();
    private Technician registeredTechnician;

    [Inject]
    private DataContext dataContext { get; set; }

    private async Task RegisterTechnician()
    {
        dataContext.Technicians.Add(technician);
        await dataContext.SaveChangesAsync();

        registeredTechnician = technician;
    }
}
